version: "3.8"
name: "budgetapp-server"

services:
  nginx:
    image: "nginx:1.25.3-alpine"
    container_name: budgetapp-server-nginx
    restart: unless-stopped
    depends_on:
      - php
      - postgres
      - adminer
    ports:
      - "${APP_PORT}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./src:/var/www/app
      - ./.env:/var/www/app/.env
  php:
    image: budgetapp-server/php
    build:
      context: dockerfiles
      dockerfile: Dockerfile-php
    container_name: budgetapp-server-php
    restart: unless-stopped
    depends_on:
      - postgres
    env_file:
      - env/php.env
    volumes:
      - ./src:/var/www/app
      - ./.env:/var/www/app/.env
  postgres:
    image: postgres:16.0-alpine3.18
    container_name: budgetapp-server-postgres
    restart: unless-stopped
    volumes:
      - ./database:/var/lib/postgresql/data
    env_file:
      - .env
  composer:
    container_name: budgetapp-server-composer
    image: budgetapp-server/composer
    build:
      context: dockerfiles
      dockerfile: Dockerfile-composer
    volumes:
      - ./src:/var/www/app
  artisan:
    container_name: budgetapp-server-artisan
    image: budgetapp-server/artisan
    build:
      context: dockerfiles
      dockerfile: Dockerfile-php
    env_file:
      - env/php.env
    volumes:
      - ./src:/var/www/app
      - ./.env:/var/www/app/.env
    entrypoint: ["php", "/var/www/app/artisan"]
  adminer:
    image: adminer:4.8.1-standalone
    container_name: budgetapp-server-adminer
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: nette
    ports:
      - "${ADMINER_PORT}:8080"
  pint:
    container_name: budgetapp-server-pint
    image: budgetapp-server/pint
    build:
      context: dockerfiles
      dockerfile: Dockerfile-php
    volumes:
      - ./src:/var/www/app
      - ./.env:/var/www/app/.env
    entrypoint: ["php", "/var/www/app/vendor/bin/pint"]
